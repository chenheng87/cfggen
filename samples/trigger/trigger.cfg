interface Trigger{
    struct InstanceOpen{
    }

    struct PhaseBegin{
        phase:int; //阶段
    }

    struct NpcKilled{
        npcId:int;  // ->npc.npc 这里只是演示，没有npc.npc表，所以注释掉，
    }

    struct NpcEnterZone{
        npcId:int;
        zone:int; // ->trigger.zone
    }

    struct APlayerEnter{
        // var_player, 这个变量会被缓存到blackboard里，用的时候以'var_player'作为id来取
    }

    struct APlayerEnterZone{
        zone:int;
        // var_player
    }

    struct APlayerLeave{
        // var_player
    }

    struct AllPlayerDie{
    }

    struct Custom{
        name:str;
    }

    struct AActorEnterCombat{
        // var_actor, 变量被缓存
    }
    struct AActorEnterCombat{
        // var_actor
    }

    struct AActorSkillStart{
        skillId:int;
        // var_actor
    }

    struct AActorSkillEnd{
        skillId:int;
        // var_actor
    }

    struct AActorSkillBreak{
        skillId:int;
        // var_actor
    }
}

interface ParamInt (defaultImpl='Value'){
    struct Value{
        value:int;
    }

    struct Var{
        var:str;
    }
}

interface Action {
    struct DoTrigger{
        name:str;
    }
    struct EnableTrigger{
        name:str;
    }
    struct DisableTrigger{
        name:str;
    }
    struct BeginPhase{
        phase:int;
    }

    struct CreateNpc{
        npcId:ParamInt;
    }

    struct DeleteNpc{
        npcId:ParamInt;
    }

    struct NpcTalk{
        talkId:int;
    }

    struct PlayTv{
        tvId:int;
    }

    struct CastSkill{
        actor:ParamInt;
        target:ParamInt;
        skillId:int;
    }

    struct AddBuff{
        actor:ParamInt;
        target:ParamInt;
        buffId:int;
    }

    struct SetEnv{
        env:int;
    }

    struct PlayMusic{
        musicId:int;
    }

    struct ActionSeq{
        actions:list<Action>;
    }

    struct ActionIf{
        condition:Condition;
        actions:list<Action>;
        elseActions:list<Action>;
    }
}

interface Condition{
    struct ActorHasBuff{
        actor:ParamInt;
        buffId:int;
        layerCount:int;
    }

    struct InstanceElapseTimeGT{
        seconds:int;
    }

    struct And{
        conditions:list<Condition>;
    }

    struct Or{
        conditions:list<Condition>;
    }

    struct Not{
        condition:Condition;
    }
}

struct TriggerFn{
    trigger:Trigger;
    actions:list<Action>;
}

table instancelogic[id] (json){ // 副本逻辑
    id:int;
    triggers:list<TriggerFn>;
}
