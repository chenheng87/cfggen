struct choice {
	text:text;
	target:int ->video;
	timeout:int;
	conds:list<condition>;
	hide:bool;
	x:int; // 选项y坐标，屏幕左侧为0，屏幕右侧为1920
	y:int; // 选项y坐标，屏幕上方为0，屏幕下方为-1080
}

interface condition {
	struct checkItem { // 检查是否有物品
		id:int; // ->prop.item;
	}

	struct checkInfo {
		id:int; // ->prop.info;
	}

	struct checkUnlockVideo {
		id:int; // ->video;
	}

	struct checkUnlockSceneNode {
		id:int; // ->sceneexplore.scenenode;
	}

	struct checkLovePoint {
		roleId:int; //->role.role;
		point:int;
	}

	struct and {
		conds:list<condition>;
	}

	struct or {
		conds:list<condition>;
	}

	struct not {
		conds:condition;
	}

}

interface action {
	struct giveInfo {
		id:int; // ->prop.info;
	}

	struct giveItem {
		id:int; // ->prop.item;
	}

	struct giveLovePoint {
		roleId:int; // ->role.role;
		point:int;
		effectType:int; // ->lovepointtype; // 0小号心心，1中号心心， 2大号心心，4心碎
	}

	struct jumpToVideo {
		id:int;
	}

	struct jumpToRoleEnding {
		id:int;
	}

	struct multi {
		actions:list<action>;
	}

	struct actIf {
		cond:list<condition>; //and
		todo:list<action>;
		elseTodo:list<action>;
	}
}

struct triggerAction {
	action:action;
	des:str; // 策划注释
	appear_time:int; // 第几秒弹获得tips，由于是通用行为，具体功能是否支持延时请咨询程序。
	onLeave:bool; // 在离开节点时自动触发（会屏蔽appear_time）
}

table video[id] (json, title='name', description='text') {
	id:int; // 剧情节点唯一标识
	name:text; // 节点标题，会显示在剧情树
	text:str; // 视频描述（策划注释用程序不读）
	type:int; // 0剧情节点，2场景探索玩法，3手机玩法，4QTE玩法
	choices:list<choice>; // 增加选项   a,b两个视频，b循环，  循环b的时刻出choice，
	actions:list<triggerAction>; // 增加物品或增加线索   ，在a期间给东西，
}
