struct TestPackBean {
	name:str;
	iRange:Range;
}

table ability[id] (enum='name') {
	id:int; // 属性类型
	name:str; // 程序用名字
}

table equipconfig[entry] (entry='entry', columnMode) {
	entry:str; // 入口，程序填
	stone_count_for_set:int; // 形成套装的音石数量
	draw_protect_name:str; // 保底策略名称
	broadcastid:int; // 公告Id
	broadcast_least_quality:int; // 公告的最低品质
	week_reward_mailid:int; // 抽卡周奖励的邮件id
}

table jewelry[ID] (extraSplit=40, title='Name') {
	ID:int (range='1,9999'); // 首饰ID
	Name:str; // 首饰名称
	IconFile:str; // 图标ID
	LvlRank:LevelRank ->equip.jewelryrandom; // 首饰等级
	JType:str ->equip.jewelrytype; // 首饰类型
	SuitID:int ->equip.jewelrysuit (nullable); // 套装ID（为0是没有不属于套装，首饰品级为4的首饰该参数为套装id，其余情况为0,引用JewelrySuit.csv）
	KeyAbility:int ->equip.ability; // 关键属性类型
	KeyAbilityValue:int; // 关键属性数值
	SalePrice:int; // 售卖价格
	Description:str; // 描述,根据Lvl和Rank来随机3个属性，第一个属性由Lvl,Rank行随机，剩下2个由Lvl和小于Rank的行里随机。Rank最小的时候都从Lvl，Rank里随机。
}

table jewelryrandom[LvlRank] {
	LvlRank:LevelRank; // 等级
	AttackRange:Range; // 最小攻击力
	OtherRange:list<Range> (fix=4); // 最小防御力
	TestPack:list<TestPackBean> (pack); // 测试pack
}

table jewelrysuit[SuitID] (entry='Ename') {
	SuitID:int; // 饰品套装ID
	Ename:str;
	Name:text; // 策划用名字
	Ability1:int; // 套装属性类型1（装备套装中的两件时增加的属性）
	Ability1Value:int; // 套装属性1
	Ability2:int; // 套装属性类型2（装备套装中的三件时增加的属性）
	Ability2Value:int; // 套装属性2
	Ability3:int; // 套装属性类型3（装备套装中的四件时增加的属性）
	Ability3Value:int; // 套装属性3
	SuitList:list<int> (fix=4); // 部件1
}

table jewelrytype[TypeName] (enum='TypeName') {
	TypeName:str; // 程序用名字
}

table rank[RankID] (enum='RankName') {
	RankID:int; // 稀有度
	RankName:str; // 程序用名字
	RankShowName:str; // 显示名称
}

